<div class="field mb-4">
    <%= form.label :address, "Address", class: "block text-gray-700 font-semibold mb-2" %>
    <%= form.text_field :address, id: "#{form.object.class.name.downcase}_address", class: "w-full pr-12 py-2 focus:outline-none border-3 border-gray-300 rounded address-input" %>
    <div class="suggestions-container border border-gray-300 rounded mt-2 p-2" id="suggestions_<%= form.object.class.name.downcase %>" style="max-height: 200px; overflow-y: auto;"></div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const autocompleteInput = document.getElementById('<%= "#{form.object.class.name.downcase}_address" %>');
    const suggestionsContainer = document.getElementById("suggestions_<%= form.object.class.name.downcase %>");

    function debounce(func, wait) {
        let timeout;
        return function (...args) {
            clearTimeout(timeout);
            timeout = setTimeout(() => func.apply(this, args), wait);
        };
    }

    function fetchSuggestions() {
        const query = autocompleteInput.value.trim();

        if (query.length > 2) {
            const encodedQuery = encodeURIComponent(query);
            fetch(`/resources/address_suggestions?query=${encodedQuery}`)
                .then((response) => response.json())
                .then((data) => {
                    showSuggestions(data);
                })
                .catch((error) => console.error("Error fetching suggestions:", error));
        }
    }

    const debouncedFetchSuggestions = debounce(fetchSuggestions, 300);
    autocompleteInput.addEventListener("input", debouncedFetchSuggestions);

    function showSuggestions(suggestions) {
        suggestionsContainer.innerHTML = "";

        suggestions.forEach((suggestion) => {
            const suggestionItem = document.createElement("div");
            suggestionItem.style.cursor = "pointer";
            suggestionItem.classList.add("p-2", "hover:bg-gray-200");
            suggestionItem.innerText = suggestion;

            suggestionItem.addEventListener("click", () => {
                autocompleteInput.value = suggestion;
                suggestionsContainer.innerHTML = "";
            });

            suggestionsContainer.appendChild(suggestionItem);
        });
    }
});
</script>
